snippet console-log
alias cl
options head
    console.log(${0:TARGET});

snippet siesta-view-chain
options head
    StartTest(function(t){
        var className = '${0:TARGET}';

        t.diag(className);

        t.requireOk([
            className
        ], function() {
            t.chain(function(next){
                next();

            },function(next){
                var panel = Ext.create(className, {
                    height:800,
                    renderTo: Ext.getBody()
                });
            });
        });
    });

snippet siesta-view
options head
    StartTest(function(t){
        var className = '${0:TARGET}';

        t.diag(className);

        t.requireOk([
            className
        ], function() {
            var panel = Ext.create(className, {
                height:800,
                renderTo: Ext.getBody()
            });
        });
    });

snippet siesta-store
options head
    ${0:TARGET}Store = Ext.create('');
    t.is(Store.storeId,'');

snippet xeno-copylight
options head
    /* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */

    /*!
     * ${0} - Screening System
     * Copyright (c) 2014 Xenophy.CO.,LTD All rights Reserved.
     * http://www.xenophy.com
     */



    /*
     * Local variables:
     * tab-width: 4
     * c-basic-offset: 4
     * c-hanging-comment-ender-p: nil
     * End:
     */

snippet xeno-define
options head
    /* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */

    /*!
     *${1}  - Screening System
     * Copyright (c) 2014 Xenophy.CO.,LTD All rights Reserved.
     * http://www.xenophy.com
     */

    // {{{ ScrTool.grid.ArchiveSearch

    Ext.define(${2}, {
        //extends
        extend: ${3},
        //aliasName
        alias: ${4},
        //requires
        requires: [
        ${5}
        ],

        // {{{initComponent

        initComponent: function(){

            var me = this;

            // {{{Ext.apply

            Ext.apply(me, {
            ${6}
            });

            // }}}

            me.callParent(arguments);
        }

        //}}}
    });
    // }}}
    /*
     * Local variables:
     * tab-width: 4
     * c-basic-offset: 4
     * c-hanging-comment-ender-p: nil
     * End:
     */

snippet cap
options head
        Ext.util.Observable.capture(me, function() {
            console.log(arguments);
        });${1}
